<!-- Open AI -->

 const gptResults = await openai.chat.completions.create({
        messages: [{ role: 'user', content: gptQuery }],
        model: 'gpt-4o-mini',
      });

    const handleGptSearchResults = async () => {
      console.log(gptSearchInput.current.value)

      const gptQuery = "Act like a movie recomandation system . Give me some movie results for the query :"+gptSearchInput.current.value+".Only me 5 movie suggestion which is seprated by comma like the example result ahead. Example result : Golmall, Don, Koi Mil Gya, Hera Pheri, Phir Hera Pheri"

      const gptResults = await openai.chat.completions.create({
        messages: [{ role: 'user', content: gptQuery }],
        model: 'gpt-3.5-turbo',
        store: true
    });
      

      console.log(gptResults.choices[0])
    }


<!-- Gemini -->
const searchMoviesFrmTMDB = async (movie) => {
      const data = await fetch("https://api.themoviedb.org/3/search/movie?query="+ movie +"&include_adult=false&language=en-US&page=1", API_Options)

      const json = await data.json();
      return json.results;
    }

    const handleGenaiSearch = async () => {

      const prompt = "Act like a movie recomandation system . Give me some movie results for the query :"+gptSearchInput.current.value+".Give me top 5 movie names suggestions which is seprated by comma like the example result ahead. Example result : Golmall, Don, Koi Mil Gya, Hera Pheri, Phir Hera Pheri";
      const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

      const result = await model.generateContent(prompt);
      // console.log(result.response.text());

      const genaiMovies = result.response.text().split(",");
      
      const moviesArray = genaiMovies?.map((movie) => searchMoviesFrmTMDB(movie));

      const movieResults = await Promise.all(moviesArray);
      
      dispatch(genAiMovieSearch({movieNames: genaiMovies, movieResults: movieResults}))
    }

